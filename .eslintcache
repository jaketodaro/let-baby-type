[{"/Users/jaketodaro/opensrc/let-baby-type/src/reportWebVitals.ts":"1","/Users/jaketodaro/opensrc/let-baby-type/src/App.tsx":"2","/Users/jaketodaro/opensrc/let-baby-type/src/BouncyBoi.tsx":"3"},{"size":425,"mtime":1608514079134,"results":"4","hashOfConfig":"5"},{"size":2780,"mtime":1608700670912,"results":"6","hashOfConfig":"5"},{"size":1539,"mtime":1608576629527,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qx0v7y",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jaketodaro/opensrc/let-baby-type/src/reportWebVitals.ts",[],"/Users/jaketodaro/opensrc/let-baby-type/src/App.tsx",["15","16","17"],"import React, { useRef, useLayoutEffect, useState } from 'react';\n\nconst rainbow = [\n  [255, 0, 0], // red\n  [255, 165, 0], // orange\n  [255, 255, 0], // yellow\n  [0, 255, 0], // green\n  [0, 0, 255], // blue\n  [75, 0, 130], // indigo\n  [238, 130, 238], // violet\n];\n\nfunction getGradientAt(percent: number): number {\n  const steps = rainbow.length;\n  const stepPercent = 1 / steps;\n  const startIndex = Math.floor(steps * percent);\n  const mixPercent = percent - startIndex * stepPercent;\n\n  return 0;\n}\n\nconst START = Date.now();\nconst rotateDuration = 10 * 1000;\n\nfunction App() {\n  const height = document.body.clientHeight;\n  const width = document.body.clientWidth;\n  const size = Math.sqrt(height * height + width * width);\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const rotate = useRef(0);\n\n  const [time, setTime] = useState(START);\n\n  const tick = () => {\n    requestAnimationFrame(() => {\n      setTime(Date.now());\n      tick();\n    });\n  };\n\n  useLayoutEffect(tick, []);\n\n  useLayoutEffect(() => {\n    const ctx = canvasRef.current?.getContext('2d');\n\n    if (ctx == null) {\n      return;\n    }\n\n    const height = document.body.clientHeight;\n    const width = document.body.clientWidth;\n    const size = Math.sqrt(height * height + width * width);\n\n    const progress = ((time - START) % rotateDuration) / rotateDuration;\n    const rotateRad = progress * 360 * (Math.PI / 180);\n\n    ctx.clearRect(-size, -size, size, 2 * size);\n    ctx.translate(size / 2, size / 2);\n    ctx.rotate(rotateRad - rotate.current);\n    ctx.translate(-size / 2, -size / 2);\n\n    var grd = ctx.createLinearGradient(0, 0, size, size);\n    grd.addColorStop(0, 'rgba(' + rainbow[0].join(',') + ', .4)');\n    grd.addColorStop(1 / 5, 'rgba(' + rainbow[1].join(',') + ', .4)');\n    grd.addColorStop(1, 'rgba(' + rainbow[2].join(',') + ', .4)');\n\n    // Fill with gradient\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, size * 40, size * 999);\n\n    rotate.current = rotateRad;\n  }, [time]);\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        inset: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {/* <div\n        className={css`\n          animation: ${bg} 120s linear infinite;\n          opacity: 0.4;\n          position: fixed;\n          inset: -20%;\n          background-image: linear-gradient(\n            to right,\n            red,\n            orange,\n            yellow,\n            green,\n            blue,\n            indigo,\n            violet,\n            red\n          );\n          background-size: 400% 100%;\n          background-repeat: repeat-x;\n        `}\n      ></div> */}\n\n      <canvas ref={canvasRef} height={size} width={size}></canvas>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jaketodaro/opensrc/let-baby-type/src/BouncyBoi.tsx",[],{"ruleId":"18","severity":1,"message":"19","line":13,"column":10,"nodeType":"20","messageId":"21","endLine":13,"endColumn":23},{"ruleId":"18","severity":1,"message":"22","line":17,"column":9,"nodeType":"20","messageId":"21","endLine":17,"endColumn":19},{"ruleId":"23","severity":1,"message":"24","line":42,"column":25,"nodeType":"25","endLine":42,"endColumn":27,"suggestions":"26"},"@typescript-eslint/no-unused-vars","'getGradientAt' is defined but never used.","Identifier","unusedVar","'mixPercent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.","ArrayExpression",["27"],{"desc":"28","fix":"29"},"Update the dependencies array to be: [tick]",{"range":"30","text":"31"},[993,995],"[tick]"]